{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "elbstatusgandinet": {
       "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
       "Properties": {
          "AvailabilityZones" : { "Fn::GetAZs" : "eu-west-1" },
          "CrossZone" : true,
          "LoadBalancerName" : "status-gandi-net",
          "Listeners" : [ {
            "LoadBalancerPort" : "80",
            "InstancePort" : "80",
            "Protocol" : "HTTP"
          } ]
       }
    },
    "lcstatusgandinet": {
       "Type" : "AWS::AutoScaling::LaunchConfiguration",
       "Properties" : {
          "ImageId" : "ami-XXXXXXXX",
          "InstanceType" : "m1.small",
          "KernelId" : "aki-XXXXXXXX",
          "KeyName" : "status.gandi.net",
          "SecurityGroups" : [ { "Ref" : "sgtoinstance" } ]
       }
    },
    "asgstatusgandinet": {
       "Type" : "AWS::AutoScaling::AutoScalingGroup",
       "Properties" : {
          "AvailabilityZones" : { "Fn::GetAZs" : "eu-west-1" },
          "LaunchConfigurationName" : { "Ref" : "lcstatusgandinet" },
          "LoadBalancerNames" : [ { "Ref" : "elbstatusgandinet" } ],
          "MaxSize" : 2,
          "MinSize" : 1
       }
    },
    "rdsstatusdb": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AutoMinorVersionUpgrade": "true",
        "DBInstanceClass": "db.t1.micro",
        "Port": "5432",
        "AllocatedStorage": "5",
        "BackupRetentionPeriod": "0",
        "DBName": "MyDatabase",
        "Engine": "postgres",
        "EngineVersion": "9.3.3",
        "LicenseModel": "postgresql-license",
        "MasterUsername": "statusdbroot",
        "MasterUserPassword": "MyPassword",
        "PreferredBackupWindow": "23:36-00:06",
        "PreferredMaintenanceWindow": "mon:04:47-mon:05:17",
        "DBSubnetGroupName": {
          "Ref": "dbsubnetdefault"
        },
        "Tags": [
          {
            "Key": "workload-type",
            "Value": "other"
          }
        ]
      }
    },
    "dbsubnetdefault": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "default",
        "SubnetIds": [
          "subnet-a4f3cee2",
          "subnet-b2f1edc6",
          "subnet-ac12e2c9"
        ]
      }
    },
    "sgtoloadbalancer": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "This security group was generated by AWS Marketplace and is based on recommended settings for Debian GNU/Linux version 7.4a provided by Debian",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/21"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/21"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/21"
          }
        ]
      }
    },
    "sgtoinstance": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "This security group was generated by AWS Marketplace and is based on recommended settings for Debian GNU/Linux version 7.4a provided by Debian",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/21"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/21"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/21"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "SourceSecurityGroupOwnerId": {
              "Fn::GetAtt": [
                "elbstatusgandinet",
                "SourceSecurityGroup.OwnerAlias"
              ]
            },
            "SourceSecurityGroupName": {
              "Fn::GetAtt": [
                "elbstatusgandinet",
                "SourceSecurityGroup.GroupName"
              ]
            }
          }
        ]
      }
    },
    "dbsgdefault": {
      "Type": "AWS::RDS::DBSecurityGroup",
      "Properties": {
        "GroupDescription": "default"
      }
    }
  },
  "Description": "status"
  "Outputs": {
    "LoadBalancer": {
      "Value" : { "Fn:GetAtt" : ["elbstatusgandinet", "DNSName"] }
    }
  }
}
